# Use this command to generate a keystore if needed:
# keytool -genkey -v -keystore diabetes-apps-key.p12 -alias diabetes-apps-key -keyalg RSA -keysize 4096 -validity 50000 -keypass android -storepass android
name: Build full Android APK

on:
  workflow_dispatch:
    inputs:
      perform_release:
        description: "Generate a release with built artifacts"
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Create keystore file from KEYSTORE_BASE64
      run: |
        echo "$KEYSTORE_BASE64" | base64 --decode > "$HOME/keystore.p12"
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: >
        ./gradlew assembleProdRelease
        "-Pandroid.injected.signing.store.file=$HOME/keystore.p12"
        "-Pandroid.injected.signing.store.password=$STORE_PASSWORD"
        "-Pandroid.injected.signing.key.alias=$KEY_ALIAS"
        "-Pandroid.injected.signing.key.password=$KEY_PASSWORD"
      env:
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: app/build/outputs/apk/prod/release

  release:
    needs: build
    permissions:
      contents: write
    if: ${{ inputs.perform_release }}
    runs-on: ubuntu-latest
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output

      - name: Get version name.
        id: version_info
        run: |
          APK_NAME=app-prod-release.apk
          APKANALYZER="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/apkanalyzer"
          echo "VERSION_CODE=$($APKANALYZER manifest version-code $APK_NAME)" >> $GITHUB_OUTPUT
          echo "VERSION_NAME=$($APKANALYZER manifest version-name $APK_NAME)" >> $GITHUB_OUTPUT

      - name: Display structure of downloaded files
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version_info.outputs.VERSION_NAME }}
          files: '*.apk'
